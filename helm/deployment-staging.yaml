affinity: {}
applicationProdProperties:
  configmap:
    application-prod.properties: >

      server.port=8001

      server.servlet.context-path=/product-service/v1

      logging.config=logback.xml

      store.subdomain.config.path=./symplified.ai


      store.subdomain.token=sso-key
      AEhWg2ekEsa_6SfRAspfXZeEFbAef1AX8N:2LXBVGr7tRcaerxE587WJN


      store.subdomain.config.allowed=false

      spring.servlet.multipart.max-file-size=5MB

      spring.servlet.multipart.max-request-size=5MB

      security.basic.enabled=false

      management.security.enabled=false


      product.assets.url=https://symplified.it/product-assets/

      product.assets.location=/home/docker/Software/assets/product-assets


      store.assets.url=https://symplified.it/store-assets/

      store.assets.location=/home/docker/Software/assets/store-assets

      store.logo.default.url=https://symplified.it/store-assets/logo_symplified_bg.png

      store.banner.ecommerce.default.url=https://assets.symplified.it/store-assets/banner-fnb.png

      store.banner.fnb.default.url=https://symplified.it/store-assets/banner-fnb.png

      store.favicon.easydukan.default.url=https://assets.symplified.it/store-assets/fav-icon-easydukan.png

      store.favicon.deliverin.default.url=https://assets.symplified.it/store-assets/fav-icon-deliverin.png

      store.favicon.symplified.default.url=https://assets.symplified.it/store-assets/fav-icon-symplified.png

      store.description.length=300

      spring.jpa.hibernate.ddl-auto=none

      spring.datasource.url=jdbc:mysql://my-release-mysql-primary.default.svc.cluster.local:3306/symplified

      spring.datasource.username=root

      spring.datasource.password=kalsym@123

      spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

      whatsapp.service.push.url=https://waw.symplified.it/360dialog/callback/templatemessage/push

      services.user-service.bulk_authorities.url =
      https://api.symplified.it/user-service/v1/authorities/bulk

      services.user-service.session_details =
      https://api.symplified.it/user-service/v1/sessions/details


      deliveryService.createcentercode.URL=https://api.symplified.it/delivery-service/v1/deliveryEvent/createCentreCode/<storeId>

      livechat.store.agent.creation.url=https://live.symplified.it/api/v1/groups.create

      livechat.store.agent.deletion.url=https://live.symplified.it/api/v1/groups.delete

      livechat.store.agent.invitation.url=https://live.symplified.it/api/v1/groups.invite

      liveChat.login.url=https://live.symplified.it/api/v1/login

      liveChatlogin.username=order

      asset.service.url = https://assets.symplified.it

      liveChat.login.password=sarosh@1234
  volumeMount:
    - mountPath: /home/docker/Software/application-prod.properties
      name: product-service-approd-vol
      subPath: application-prod.properties
  volumes:
    - configMap:
        name: product-service-approd-cm
      name: product-service-approd-vol
applicationProperties:
  configmap:
    application.properties: >
      # Default config (refrain from editting this config, please add in
      application-prod.properties below)

      spring.profiles.active=prod

      proj.name=product-service

      build.version=@project.version@
  volumeMount:
    - mountPath: /home/docker/Software/application.properties
      name: product-service-ap-vol
      subPath: application.properties
  volumes:
    - configMap:
        name: product-service-ap-cm
      name: product-service-ap-vol
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ''
image:
  pullPolicy: Always
  repository: kalsym/product-service
  tag: 3.10.4
imagePullSecrets:
  - name: kalsym-docker-hub
ingress:
  className: ''
  enabled: true
  hosts:
    - host: api.symplified.it
      paths:
        - path: /product-service/v1
          pathType: ImplementationSpecific
  tls:
    - hosts:
        '0': api.symplified.it
      secretName: secret-tls-it
logback:
  configmap:
    logback.xml: |
      <?xml version="1.0" encoding="UTF-8"?> <configuration>

          <property name="LOGS" value="/home/docker/Software/logs/symplified" />
          <property name="CDRS" value="/home/docker/Software/logs" />

          <property resource="application.properties" />

          <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
              <layout class="ch.qos.logback.classic.PatternLayout">
                  <Pattern>
                      %black(%d{ISO8601}) %highlight(%-5level) %yellow(%C{1.}): %msg%n%throwable
                  </Pattern>
              </layout>
          </appender>

          <appender name="APPLICATION" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>${LOGS}/product-service/product-service.log</file>
              <append>true</append>
              <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                  <!-- rollover daily and when the file reaches 10 MegaBytes -->
                  <fileNamePattern>${LOGS}/product-service/archived/product-service-%d{yyyy-MM-dd}.%i.log
                  </fileNamePattern>
                  <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                      <maxFileSize>10MB</maxFileSize>
                  </timeBasedFileNamingAndTriggeringPolicy>
              </rollingPolicy>
              <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                  <charset>UTF-8</charset>
                  <layout class="ch.qos.logback.classic.PatternLayout">
                      <Pattern>%d %p %M %L [%t] - %m%n</Pattern>
                  </layout>
              </encoder>
          </appender>

          <appender name="CDR" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>${CDRS}/product-service-cdr.csv</file>
              <append>true</append>
              <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                  <!-- rollover daily and when the file reaches 10 MegaBytes -->
                  <fileNamePattern>${CDRS}/product-service/cdrs/cdr-%d{yyyy-MM-dd}.%i.csv
                  </fileNamePattern>
                  <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                      <maxFileSize>10MB</maxFileSize>
                  </timeBasedFileNamingAndTriggeringPolicy>
              </rollingPolicy>
              <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                  <charset>UTF-8</charset>
                  <layout class="ch.qos.logback.classic.PatternLayout">
                      <Pattern>%date{dd:MMM:yyyy;HH:mm:ss.SSS},%m%n</Pattern>
                  </layout>
              </encoder>
          </appender>

          <!-- LOG everything at INFO level -->
          <root level="INFO">
              <appender-ref ref="APPLICATION" />
          </root>

          <logger name="cdr" level="DEBUG" additivity="false">
              <appender-ref ref="CDR" />
          </logger>

          <!-- LOG "com.baeldung*" at TRACE level -->
          <!-- <logger name="application" level="DEBUG" additivity="true">
              <appender-ref ref="APPLICATION" />
          </logger> -->

      </configuration>
  volumeMount:
    - mountPath: /home/docker/Software/logback.xml
      name: product-service-lgb-vol
      subPath: logback.xml
  volumes:
    - configMap:
        name: product-service-lgb-cm
      name: product-service-lgb-vol
nameOverride: ''
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 8001
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ''
tolerations: []
